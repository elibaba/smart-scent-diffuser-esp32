esphome:
  name: scent-diffuser
  friendly_name: srakhrakhok

esp32:
  board: esp32dev
  framework:
    type: arduino

# Important bit - sleep duration has to be zero, otherwise it'll go to sleep after run_duration on every wakeup, while I want the sleep duration
# to eb dynamic according to the deep_sleep_duration number set via the frontend
deep_sleep:  
  id: spray_deep_sleep
  run_duration: 5min
  sleep_duration: 0s
    

# Enable logging
logger:
  level: INFO

# Enable Home Assistant API
api:
  encryption:
    key: "EJ1d+npk8rcCD1EnY6XZIFQgJSX+kXiMXIXKtWZ7nkE="

ota:
  - platform: esphome
    password: "be92a50c4ba01df6130af8a7fad91053"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Srakhrakhok Fallback Hotspot"
    password: "12345678"

captive_portal:

globals:
  - id: daily_counter
    type: int
    restore_value: yes
    initial_value: '0'
  - id: total_counter
    type: int
    restore_value: yes
    initial_value: '0'

# number for sleep duration
number:
  - platform: template
    id: deep_sleep_duration
    name: "Deep Sleep Duration Minutes"
    optimistic: true
    min_value: 1
    max_value: 120
    step: 1

switch:
  - platform: gpio
    pin: GPIO15
    id: srakhrakhok
    inverted: yes
    name: "Spray"
    on_turn_on:
      - lambda: |-
          id(daily_counter) += 1;
          id(total_counter) += 1;
          ESP_LOGI("main", "Daily counter: %d, Total Counter: %d", id(daily_counter), id(total_counter));
      - delay: 2s
      - switch.turn_off: srakhrakhok
      - delay: 2s

  - platform: template
    name: "Reset Day Counter"
    id: reset_day_counter
    turn_on_action:
      - lambda: |-
          id(daily_counter) = 0;
          ESP_LOGI("main", "Day Counter reset");
      - delay: 2s
      - switch.turn_off: reset_day_counter
      - delay: 2s

  - platform: template
    name: "Reset Total Counter"
    id: reset_total_counter
    turn_on_action:
      - lambda: |-
          id(total_counter) = 0;
          ESP_LOGI("main", "Total Counter reset");
      - delay: 2s
      - switch.turn_off: reset_total_counter
      - delay: 2s

  # switch for deep sleep
  - platform: template
    name: "Deep Sleep"
    id: deep_sleep_switch
    turn_on_action:
      - delay: 1s  # Small delay to ensure the switch action is registered
      - lambda: |-
          // Read the number value for sleep duration
          int duration_in_minutes = int(id(deep_sleep_duration).state);
          ESP_LOGI("main", "Entering deep sleep for %d minutes", duration_in_minutes);
          id(spray_deep_sleep).set_sleep_duration(duration_in_minutes*60*1000); // convert ms to minutes
          id(spray_deep_sleep).begin_sleep();
      - delay: 2s
      - switch.turn_off: deep_sleep_switch
      - delay: 2s
      

sensor:
  - platform: template
    name: "Daily Counter"
    lambda: |-
      return (float) id(daily_counter);
    icon: "mdi:counter"
    unit_of_measurement: "activations"
    accuracy_decimals: 0

  - platform: template
    name: "Total Counter"
    lambda: |-
      return (float) id(total_counter);
    icon: "mdi:counter"
    unit_of_measurement: "activations"
    accuracy_decimals: 0

  - platform: template
    name: "Percentage Spent"
    lambda: |-
      return (float) id(total_counter) / 1500.0 * 100.0;
    icon: "mdi:percent"
    unit_of_measurement: "%"
    accuracy_decimals: 1

time:
  - platform: homeassistant
    id: homeassistant_time
    on_time:
      - seconds: 0
        minutes: 59
        hours: 6
        then:
          - lambda: |-
              id(daily_counter) = 0;
              ESP_LOGI("main", "Daily counter reset at 06:59");
    
      - seconds: 10
        minutes: 58
        hours: 6
        then:
           lambda: |-
              ESP_LOGI("main", "Waking up from deep sleep at 06:58");

            
